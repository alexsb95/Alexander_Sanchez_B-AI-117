/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Matrix;

import Algorithm.AStar;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Random;

/**
 *
 * @author Alex
 */
import taxi.TaxiCab;

public class Map {
    
    private Cell[][] nodeMatrix;
    private AStar aStarAlg;
    private TaxiCab taxi;
    
    public void getSendTaxi(){
        
    }
    
     public void readMatrix(){
        int iLen = charMatrix.length;
        int jLen = charMatrix[0].length;

        /*i => 0 
               1
               2
        */
        
        /*j => 0 1 2 */
        nodeMatrix = new Cell[iLen][jLen];
    
        System.out.println("size "+iLen+" "+jLen);
        
        ArrayList<Street> clients = new ArrayList<>();
        HashMap<Character, Block> streetBlocks = new HashMap<>();
        
        
        for(int i = 0; i < iLen; i++){
            for(int j = 0; j < jLen; j++){             
                 if(charMatrix[i][j] == '-'){
                    nodeMatrix[i][j] = new Cell(i,j);              
                }else if( Character.toUpperCase(charMatrix[i][j]) >= 'A' && Character.toUpperCase(charMatrix[i][j]) <= 'Z' ){
                    streetBlocks.put(Character.toUpperCase(charMatrix[i][j]), new Block(i,j,Character.toUpperCase(charMatrix[i][j])));      
                    nodeMatrix[i][j] = null;
                }else if( charMatrix[i][j] == '#'){
                    Street client = new Street(i,j);
                    Random rnd = new Random();
                    int destin = rnd.nextInt(24) + 65;
                    client.take((char)destin);
                    
                    clients.add(client);
                    nodeMatrix[i][j] = null;
                }else
                    nodeMatrix[i][j] = null;            
            }
            
        }
          
        for(Street cli: clients){
            streetBlocks.forEach((k,v) -> {
                if(v.getX() - 1 == cli.getX() || v.getX() + 1 == cli.getX() ){
   
                    if(v.getY() - 1 == cli.getY() || v.getY() == cli.getY() || v.getY() + 1 == cli.getY()){
                        v.waitTaxi(cli.getDestination());
                    }
                }
            });            
        }
                   
        
    }
    
    private char[][] charMatrix =         
            {{'%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','#','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','A','%','-','%','*','%','-','%','B','%','-','%','*','%','-','%','C','%','-','%','*','%','-','%','D','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','*','%','-','%','G','%','-','%','*','%','-','%','F','%','-','%','*','%','-','%','E','%','-','%','*','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','H','%','-','%','*','%','-','%','I','%','-','%','*','%','-','%','J','%','-','%','*','%','-','%','K','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','*','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','*','%','-','%','O','%','-','%','*','%','-','%','L','%','-','%','*','%','-','%','L','%','-','%','*','%','-','%','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','_','_','_','_','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%'},
           {'%','-','%','P','%','-','%','*','%','-','%','Q','%','-','%','*','%','-','%','R','%','-','%','*','%','-','%','S','%','-','-','-','-','-','-','-','-','%','T','%','-','%','U','%','-','%','V','%','-','%','W','%','-','%'},
           {'%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%','%','%','-','%'},
           {'%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%','_','_','_','_','%','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','%'},
           {'%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','_','_','_','_','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%','%'}};

}
